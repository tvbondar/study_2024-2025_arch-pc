; Программа вывода сообщений на экран и ввода с клавиатуры
SECTION .data ; Секция инициированных данных
msg: DB 'Введите строку:',10 ;сообщение плюс
				; символ перевода строки
msgLen: EQU $-msg ; длина переменной 'msg'

SECTION .bss ; секция неинициированных данных 
buf1:	RESB 80 ;буфер размером 80 байт
;Текст программы
SECTION .text ; код программы
GLOBAL _start ; начало программы
_start:	      ; точка входа в программу
;Системный вызов 'write'
;После вызова инструкции 'int 80h' на экран будет выведено сообщение
; из переменной 'msg' длиной 'msgLen'
    mov eax,4 ;системный вызов для записи (sys_write)
    mov ebx,1 ; описатель файла 1 - стандартный вывод
    mov ecx,msg ; адрес строки 'msg' в 'ecx'
    mov edx,msgLen ; размер строки 'msg' в 'edx'
    int 80h ; вызов ядра
; Системный вызов 'read'
; После вызова инструкции int 80h программа будет ожидать ввода стпроки
; которая будет записана в переменную 'buf1' размером 80 байт
    mov eax, 3 ; системный вызов для чтения 
    mov ebx, 0 ; дескриптор файла 0 - стандартный ввод
    mov ecx, buf1 ; адрес буфера под вводимую строку
    mov edx, 80 ; длина вводимой строки
    int 80h ; вызов ядра
; Системный вызов 'exit'. После вызова инструкции 'int 80h' программа завершит работу
    mov eax,1 ; Системный вызов для выхода ( sys_exit)
    mov ebx,0 ; Выход с кодом возврата 0 (без ошибок)
    int 80h ; вызов ядра